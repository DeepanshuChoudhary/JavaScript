'use strict';

let name = ["Deepanshu", "Aakash", "Nishant", "Sagar", 1, true, false, null];

name.push("Khushi"); // Adds "Khushi" to the end of the array
name.unshift("Shruti"); // Adds "Shruti" to the beginning of the array

// Example: name.splice(1, 3) would delete elements from index 1 up to 3 elements.
// Structure of splice: (starting index, number of elements to delete, elements to add)
name.splice(1, 0, "Ankit"); // Adds "Ankit" at index 1, without deleting any elements

console.log(name);
console.log(name[2]); // Prints the element at index 2, which is "Nishant"

console.log(name.length); // Prints the total number of elements in `name` array


let num = [10, 20, 35, 19, 25, 60];

// Example of a basic for loop to print each element in `num`
// for (let i = 0; i < num.length; i++) {
//     console.log(num[i]);
// }

// Using forEach to loop through `num`
num.forEach((val, index, array) => { // `val` is the current value, `index` is the current index
    console.log(val + " " + index); // Prints each value along with its index
    // console.log(val + " " + index + " " + array); // Uncomment to see entire array with each element
}); 


// Using map to create a new array based on `num`
let g = num.map((val) => {
    return val; // Returns each element unchanged
    // return val + 10; // Uncomment to add 10 to each element
});

console.log(g); // Prints the new array generated by map

let num2 = [11, 21, 31, 41, 51, 61];

// Using concat to combine `num` and `num2` arrays
console.log(num.concat(num2)); // Merges `num` and `num2` arrays into one


// Using indexOf to find the index of a specific value
console.log(num.indexOf(25)); // Finds the index of 25 in `num` (original array)
console.log(num2.indexOf(31)); // Finds the index of 31 in `num2`


// Using reverse to reverse the order of `num`
console.log(num.reverse()); // Reverses `num` array in place


// Using sort to sort `num` array
console.log(num.sort()); // Sorts the array in ascending order (modifies `num` itself)


// Using slice to create a sub-array from `num`
let a = num.slice(1, 4); // Slices the array from index 1 to 4 (4 is not included)
console.log(a); // Prints the sliced array
console.log(num); // `num` remains unchanged


// Using toString to convert `num` to a string
console.log(num.toString()); // Converts the array to a comma-separated string


// Using filter to select specific elements from `num`
let sortValue = num.filter((val) => {
    if (val >= 10 && val <= 25) {
        return val; // Returns elements within the range 10 to 25
    }
});

console.log(sortValue); // Prints filtered array with values between 10 and 25


// Using find to locate a specific value in `num`
let findValue = num.find((val) => {
    return val == 25; // Finds the first element that equals 25
    // return val == 31; // Would return undefined if 31 is not in the array
});

console.log(findValue); // Prints the first value that matches the condition


// Using findIndex to locate the index of a specific value in `num`
let findIndexValue = num.findIndex((val) => {
    return val == 25; // Finds the index of the first element that equals 25
    // return val == 31; // Would return -1 if 31 is not in the array
});

console.log(num); // Prints the current state of `num`
console.log(findIndexValue); // Prints the index of the first occurrence of 25


// Using findLastIndex to locate the last occurrence of a specific value in the array
// `findLastIndex` is useful when a value repeats and you want the index of its last position.

let num3 = [10, 20, 35, 40, 10, 25, 60];

let findLastIndexValue = num3.findLastIndex((val) => {
    return val == 10; // Finds the index of the last occurrence of 10 in `num3`
});

console.log(findLastIndexValue); // Prints the index of the last "10" in `num3`, which is 4


// Using split to convert a string into an array of substrings
// split(',') separates the string at each comma, making each number a separate element in the array.

let num4 = '10,20,30';

let arr = num4.split(','); // Splits `num4` by commas, resulting in ["10", "20", "30"]

// Using forEach to loop through and print each element of the array
arr.forEach(val => {
    console.log(val); // Prints each individual number as a separate element
});

console.log(arr); // Prints the full array created by split: ["10", "20", "30"]


// Using join to combine array elements into a single string
// join(" and ") combines array elements into one string, separated by " and ".

let joinArr = arr.join(" and ");
console.log(joinArr); // Prints "10 and 20 and 30" as a single string

